version: "3.8"

services:
  # Main Spiralogic Oracle System
  oracle-system:
    build: .
    container_name: spiralogic-oracle
    ports:
      - "3000:3000" # Frontend
      - "8080:8080" # Backend API
    environment:
      - NODE_ENV=production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - MONGODB_URI=${MONGODB_URI:-mongodb://mongo:27017/spiralogic}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
    depends_on:
      - mongo
      - redis
    restart: unless-stopped
    networks:
      - oracle-network
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads

  # MongoDB for consciousness memories
  mongo:
    image: mongo:7
    container_name: oracle-mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=oracle
      - MONGO_INITDB_ROOT_PASSWORD=consciousness2025
      - MONGO_INITDB_DATABASE=spiralogic
    volumes:
      - mongo-data:/data/db
    ports:
      - "27017:27017"
    networks:
      - oracle-network
    restart: unless-stopped

  # Redis for session and cache
  redis:
    image: redis:alpine
    container_name: oracle-redis
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - oracle-network
    restart: unless-stopped

  # Nginx reverse proxy (optional, for production)
  nginx:
    image: nginx:alpine
    container_name: oracle-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - oracle-system
    networks:
      - oracle-network
    restart: unless-stopped

networks:
  oracle-network:
    driver: bridge

volumes:
  mongo-data:
  redis-data:
