{
  "name": "spiralogic-oracle-system",
  "version": "1.0.0",
  "private": true,
  "scripts": {
    "dev": "cross-env NODE_ENV=development DEPLOY_TARGET=local next dev -p 3001",
    "dev:frontend": "cross-env NODE_ENV=development DEPLOY_TARGET=local next dev -p 3001",
    "dev:backend": "npm --prefix backend run dev",
    "dev:all": "concurrently -n FRONTEND,BACKEND -c auto \"npm run dev:frontend\" \"npm run dev:backend\"",
    "clean:src": "bash -lc \"find backend/src -type f -name '._*' -delete && find backend/src -type f \\( -name '*.js' -o -name '*.js.map' \\) -delete\"",
    "clean:dist": "bash -lc \"rm -rf backend/dist\"",
    "clean": "npm run clean:dist && npm run clean:src",
    "build": "next build",
    "start": "next start -p 3000",
    "build:render": "cross-env NODE_ENV=production DEPLOY_TARGET=render next build",
    "start:render": "cross-env NODE_ENV=production DEPLOY_TARGET=render next start -p 3000",
    "build:ipfs": "cross-env NODE_ENV=production DEPLOY_TARGET=ipfs next build",
    "storybook": "storybook dev -p 6006",
    "build-storybook": "storybook build",
    "lint": "eslint . --ext .ts,.tsx",
    "lint:css": "stylelint \"**/*.{css,scss}\"",
    "typecheck": "tsc -p tsconfig.json --noEmit",
    "precommit": "lint-staged",
    "start:all": "npm run build && npm start && cd backend && npm run build && npm start",
    "docker:build": "docker build -f Dockerfile.fallback -t spiralogic-web .",
    "docker:run": "docker run --rm -p 3000:3000 --env-file .env.local --add-host=host.docker.internal:host-gateway spiralogic-web",
    "docker:dev": "docker compose -f docker-compose.dev.yml up --build",
    "audit:graph": "depcruise --config .dependency-cruiser.cjs --output-type dot . | dot -Tsvg > dependency-graph.svg",
    "audit:cruise": "depcruise --config .dependency-cruiser.cjs --output-type dot . | dot -Tsvg > reports/audit/cruise.svg || true",
    "audit:dead": "ts-prune --ignore 'node_modules|\\.d\\.ts|.*\\.test\\.ts' > reports/audit/ts-prune.txt || true",
    "audit:knip": "knip --ignore 'supabase/**' --json --reporter codeowners > reports/audit/knip.json || true",
    "audit:dup": "npx jscpd --min-tokens 50 --reporters html --output reports/audit/jscpd . || true",
    "audit:docs:links": "markdown-link-check -q -c .mlc.json \"**/*.md\" > reports/audit/markdown-links.txt || true",
    "doctor:deps": "depcruise --config .dependency-cruiser.cjs --output-type text .",
    "doctor:deps:ci": "depcruise --validate .dependency-cruiser.cjs --output-type text .",
    "doctor:cycles": "madge --circular --extensions ts,tsx app backend lib || exit 1",
    "doctor:arch": "depcruise --config .dependency-cruiser.cjs --output-type err .",
    "doctor:imports": "eslint . --ext .ts,.tsx --no-eslintrc --config .eslintrc.imports.cjs",
    "doctor:dead": "ts-prune --ignore \"**/*.test.ts\" --ignore \"node_modules\" || true",
    "doctor:lint": "eslint . --ext .ts,.tsx --max-warnings 0 || true",
    "doctor:typecheck": "tsc --noEmit",
    "doctor:size": "node scripts/check-file-sizes.mjs",
    "doctor": "npm-run-all -s doctor:deps doctor:arch doctor:imports doctor:typecheck doctor:lint doctor:dead doctor:size",
    "audit:docs:lint": "remark -q . > reports/audit/remark.txt || true",
    "audit:spell": "cspell \"**/*.{ts,tsx,md}\" > reports/audit/cspell.txt || true",
    "audit:deps": "depcheck > reports/audit/depcheck.txt || true",
    "audit:all": "mkdir -p reports/audit && npm-run-all -s audit:graph audit:cruise audit:dead audit:knip audit:dup audit:docs:links audit:docs:lint audit:spell audit:deps",
    "health:check": "node scripts/test-all-health.mjs",
    "health:full": "node scripts/test-comprehensive-health.mjs",
    "health:local": "LOCAL_API=http://localhost:3000/api/health node scripts/test-all-health.mjs",
    "env:check": "npx dotenv -e env/.env.local -- node -e \"const req=['NEXT_PUBLIC_SUPABASE_URL','NEXT_PUBLIC_SUPABASE_ANON_KEY','OPENAI_API_KEY'];const m=req.filter(k=>!(process.env[k]||'').trim());if(m.length){console.error('‚ùå Missing:',m.join(', '));process.exit(1)}else{console.log('‚úÖ Required vars present')}\"",
    "env:load": "bash scripts/load-env-safely.sh",
    "env:setup": "cp env/.env.local.minimal .env.local && echo 'üìù Copied minimal template to .env.local - edit with your real keys'",
    "mindmap:build": "npx markmap-cli docs/mindmap/spiralogic.mmd -o docs/mindmap/spiralogic.html",
    "mindmap:open": "npm run mindmap:build && open docs/mindmap/spiralogic.html",
    "chromatic": "chromatic --storybook-build-dir storybook-static",
    "tokens:export": "ts-node scripts/export-tokens.ts",
    "verify:setup": "node scripts/verify-setup.mjs",
    "check:features": "node scripts/check-features.mjs"
  },
  "dependencies": {
    "@supabase/auth-helpers-nextjs": "^0.10.0",
    "@supabase/ssr": "^0.6.1",
    "@supabase/supabase-js": "^2.55.0",
    "@tailwindcss/forms": "^0.5.10",
    "@tailwindcss/typography": "^0.5.16",
    "autoprefixer": "^10.4.21",
    "class-variance-authority": "^0.7.1",
    "critters": "^0.0.23",
    "framer-motion": "^12.23.12",
    "lucide-react": "^0.540.0",
    "mongodb": "^6.18.0",
    "next": "^14.2.5",
    "openai": "^5.13.1",
    "pdf-parse": "^1.1.1",
    "postcss": "^8.5.6",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "recursive-fs": "^2.1.0",
    "swr": "^2.3.6",
    "tailwind-merge": "^3.3.1",
    "tailwindcss": "^3.4.17",
    "winston": "^3.17.0"
  },
  "devDependencies": {
    "@types/node": "^20.19.10",
    "@types/react": "^18.3.23",
    "@types/react-dom": "^18.3.7",
    "concurrently": "^9.2.0",
    "cross-env": "^10.0.0",
    "cspell": "^8.15.6",
    "depcheck": "^1.4.7",
    "dependency-cruiser": "^17.0.1",
    "eslint": "^8.57.1",
    "eslint-config-next": "^14.2.5",
    "eslint-plugin-boundaries": "^4.2.2",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-unused-imports": "^4.1.4",
    "husky": "^8.0.3",
    "knip": "^5.47.0",
    "lint-staged": "^15.2.10",
    "madge": "^8.0.0",
    "markdown-link-check": "^3.12.2",
    "npm-run-all": "^4.1.5",
    "remark": "^15.0.1",
    "remark-lint": "^10.0.0",
    "ts-prune": "^0.10.3",
    "typescript": "^5.9.2",
    "vitest": "^3.2.4",
    "wait-on": "^8.0.4",
    "@storybook/nextjs": "^8.3.0",
    "@storybook/addon-essentials": "^8.3.0",
    "@storybook/addon-a11y": "^8.3.0",
    "@storybook/addon-interactions": "^8.3.0",
    "@storybook/test": "^8.3.0",
    "stylelint": "^16.8.0",
    "stylelint-config-standard": "^36.0.0",
    "stylelint-config-recommended": "^14.0.0",
    "stylelint-declaration-strict-value": "^1.10.4",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.1.1",
    "markmap-cli": "^2.0.0",
    "chromatic": "^11.0.0",
    "ts-node": "^10.9.2"
  },
  "lint-staged": {
    "*.{ts,tsx}": [
      "eslint --fix --no-eslintrc --config .eslintrc.imports.cjs",
      "tsc --noEmit"
    ],
    "*.{ts,tsx,js,jsx}": [
      "eslint --fix"
    ],
    "*": [
      "depcruise --config .dependency-cruiser.cjs --output-type err"
    ]
  }
}
