{
  "permissions": {
    "allow": [
      "Bash(npx tsc:*)",
      "Bash(npm run typecheck:*)",
      "Bash(npm run type-check:*)",
      "Bash(grep:*)",
      "Bash(git rm:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git filter-branch:*)",
      "Bash(git stash:*)",
      "Bash(git filter-repo:*)",
      "Bash(git remote add:*)",
      "Bash(npm install:*)",
      "Bash(npm run build:*)",
      "Bash(timeout 5 npm run start:minimal)",
      "Bash(find:*)",
      "Bash(rm:*)",
      "Bash(ls:*)",
      "Bash(timeout:*)",
      "Bash(node:*)",
      "Bash(npm run dev:*)",
      "Bash(cat:*)",
      "Bash(cp:*)",
      "Bash(true)",
      "Bash(git ls-tree:*)",
      "Bash(mv:*)",
      "Bash(npx vercel:*)",
      "WebFetch(domain:frontend-asklr7br2-spiralogic-oracle-system.vercel.app)",
      "Bash(tree:*)",
      "Bash(mkdir:*)",
      "Bash(touch:*)",
      "Bash(npm run lint)",
      "Bash(npx ts-node:*)",
      "Bash(chmod:*)",
      "Bash(curl:*)",
      "Bash(npx tsx:*)",
      "Bash(NODE_ENV=test VITE_SUPABASE_URL=test VITE_SUPABASE_ANON_KEY=test npx ts-node --esm src/tests/test-oracle-modes.ts)",
      "Bash(npm start)",
      "Bash(kill:*)",
      "Bash(vercel:*)",
      "Bash(rg:*)",
      "Bash(npm audit:*)",
      "Bash(/Users/andreanezat/.nvm/versions/node/v20.19.2/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -n \"Sacred Technology Interface|Sacred Technology Platform|Sacred Tech\")",
      "Bash(/Users/andreanezat/.nvm/versions/node/v20.19.2/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -n -B2 -A2 \"Sacred Technology Platform\")",
      "Bash(/Users/andreanezat/.nvm/versions/node/v20.19.2/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -n -B3 -A3 \"Soullab Sacred Technology\")",
      "Bash(/Users/andreanezat/.nvm/versions/node/v20.19.2/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -n \"#FFD700|#FFC107|#FFB300|#FFCA28|#FFEB3B|#FDD835\")",
      "Bash(/Users/andreanezat/.nvm/versions/node/v20.19.2/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -n \"rgb\\(255,\\s*215,\\s*0\\)|rgba\\(255,\\s*215,\\s*0\")",
      "Bash(/Users/andreanezat/.nvm/versions/node/v20.19.2/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -n \"sacred-gold|#c9b037\")",
      "Bash(/Users/andreanezat/.nvm/versions/node/v20.19.2/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -n \"yellow-[3-5]00|amber-[3-5]00|gold\" --include=\"*.tsx\" --include=\"*.jsx\" --include=\"*.ts\" --include=\"*.js\")",
      "Bash(/Users/andreanezat/.nvm/versions/node/v20.19.2/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -n \"yellow-[3-5]00|amber-[3-5]00\" -g \"*.tsx\" -g \"*.jsx\" -g \"*.ts\" -g \"*.js\")",
      "Bash(/Users/andreanezat/.nvm/versions/node/v20.19.2/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -n \"#d4af37|divine-gold|sacred-amber\" -g \"*.tsx\" -g \"*.jsx\" -g \"*.ts\" -g \"*.js\" -g \"*.css\")",
      "Bash(tsc --build)",
      "Bash(npm run start:prod:*)",
      "Bash(brew list:*)",
      "Bash(brew install:*)",
      "Bash(python3.11:*)",
      "Bash(source:*)",
      "Bash(pip install:*)",
      "Bash(npm cache clean:*)",
      "Bash(export:*)",
      "Bash(gtimeout:*)",
      "Bash(npm view:*)",
      "mcp__ide__getDiagnostics",
      "Bash(npm update)",
      "Bash(npm uninstall:*)",
      "Bash(git tag:*)",
      "Bash(npm test:*)",
      "Bash(pkill:*)",
      "Bash(./setup-domains.sh:*)",
      "Bash(sudo killall:*)",
      "Bash(dig:*)",
      "Bash(./check-deployment.sh)",
      "Bash(npx next-auth:*)",
      "Bash(openssl rand:*)",
      "Bash(npm run voice:test:matrix:*)",
      "Bash(npm run voice:setup:*)",
      "Bash(python3:*)",
      "Bash(python:*)",
      "Bash(TEST_FALLBACK=true npm run voice:test:matrix)",
      "Bash(pip uninstall:*)",
      "Bash(npm run voice:play:*)",
      "Bash(afplay:*)",
      "Bash(npm run:*)",
      "Bash(TEST_FALLBACK=true node testMayaActivation.js)",
      "Bash(npx jest:*)",
      "Bash(git checkout:*)",
      "mcp__ide__executeCode",
      "Bash(git -C \"/Volumes/T7 Shield/Projects/SpiralogicOracleSystem\" status)",
      "Bash(git --git-dir=\"/Volumes/T7 Shield/Projects/SpiralogicOracleSystem/.git\" --work-tree=\"/Volumes/T7 Shield/Projects/SpiralogicOracleSystem\" status)",
      "Bash(REPO_PATH=\"/Volumes/T7 Shield/Projects/SpiralogicOracleSystem\")",
      "Bash(exec zsh)",
      "Bash(bash -c 'cd \"/Volumes/T7 Shield/Projects/SpiralogicOracleSystem\" && git status --porcelain')",
      "Bash(env -i bash -c 'cd \"/Volumes/T7 Shield/Projects/SpiralogicOracleSystem\" && /usr/bin/git status')",
      "Bash(unset ZDOTDIR)",
      "Bash(/bin/bash -l -c 'cd \"/Volumes/T7 Shield/Projects/SpiralogicOracleSystem\" && git status')",
      "WebFetch(domain:spiralogic-oracle-system.vercel.app)",
      "WebFetch(domain:soullab.life)",
      "Bash(npm i:*)",
      "Bash(pip3 install:*)",
      "Bash(pipx install:*)",
      "Bash(cd:*)",
      "Bash(npm --version)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(NODE_ENV=production npm run build)",
      "Bash(git init:*)",
      "Bash(git subtree push:*)",
      "Bash(git gc:*)",
      "Bash(git subtree split:*)",
      "Bash(claude doctor)",
      "Bash(git config:*)",
      "Bash(git pull:*)",
      "Bash(docker system prune:*)",
      "Bash(docker volume prune:*)",
      "Bash(sudo du:*)",
      "Bash(~/cleanup_mac.sh)",
      "Bash(sudo pkill:*)",
      "Bash(open:*)",
      "Bash(docker:*)",
      "Bash(sed:*)",
      "Bash(xattr:*)",
      "Bash(git reset:*)",
      "Bash(npx depcheck:*)",
      "Bash(npx eslint:*)",
      "Bash(npx prettier:*)",
      "Bash(git branch:*)",
      "Bash(npm -w backend run clean)",
      "Bash(npm -w backend run build)",
      "Bash(npm -w backend test -- -i)",
      "Bash(npx husky init:*)",
      "Bash(npx husky:*)",
      "Bash(bash:*)",
      "Bash(npm ls:*)",
      "Bash(npm remove:*)",
      "Bash(PORT=3002 PSI_LITE_ENABLED=true PSI_LEARNING_ENABLED=true PSI_LEARNING_RATE=0.08 PSI_MEMORY_ENABLED=true npm start)",
      "Bash(npx next build:*)",
      "Bash(cd:*)",
      "Bash(PORT=3001 npm start)",
      "Bash(make:*)",
      "Bash(git fetch:*)",
      "Bash(supabase start:*)",
      "Bash(supabase db reset:*)",
      "Bash(supabase status:*)",
      "Bash(psql:*)",
      "Bash(if grep -q \"NEXT_PUBLIC_SUPABASE_URL\" .env*)",
      "Bash(then echo \"NEXT_PUBLIC_SUPABASE_URL found in env files\")",
      "Bash(else echo \"NEXT_PUBLIC_SUPABASE_URL not found in env files - skipping RPC test\")",
      "Bash(fi)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": false
}