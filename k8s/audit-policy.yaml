# Kubernetes Audit Policy for Spiralogic Oracle System
# Level 5 DevSecOps - Comprehensive audit logging

apiVersion: audit.k8s.io/v1
kind: Policy
metadata:
  name: spiralogic-audit-policy
rules:

# =====================================
# CONSCIOUSNESS AND SACRED DATA AUDIT
# =====================================

# Log all consciousness-related resource access at RequestResponse level
- level: RequestResponse
  namespaces: ["spiralogic", "spiralogic-prod", "spiralogic-staging"]
  resources:
  - group: ""
    resources: ["secrets", "configmaps"]
    resourceNames:
    - "consciousness-secrets"
    - "voice-model-secrets"
    - "sacred-mirror-secrets"
    - "elemental-agent-secrets"
  omitStages: ["RequestReceived"]

# Log consciousness model access
- level: Request
  namespaces: ["spiralogic", "spiralogic-prod", "spiralogic-staging"]
  resources:
  - group: ""
    resources: ["persistentvolumes", "persistentvolumeclaims"]
  resourceNames:
  - "*consciousness*"
  - "*sacred-mirror*"
  - "*voice-model*"
  - "*elemental*"

# =====================================
# SECURITY-SENSITIVE OPERATIONS
# =====================================

# Log all exec, attach, and portforward operations
- level: RequestResponse
  resources:
  - group: ""
    resources: ["pods/exec", "pods/attach", "pods/portforward"]
  namespaces: ["spiralogic", "spiralogic-prod", "spiralogic-staging", "vault", "external-secrets-system"]

# Log privilege escalation attempts
- level: RequestResponse
  verbs: ["create", "update", "patch"]
  resources:
  - group: ""
    resources: ["pods"]
  namespaces: ["spiralogic", "spiralogic-prod", "spiralogic-staging"]
  omitStages: ["RequestReceived"]

# Log all RBAC changes
- level: RequestResponse
  resources:
  - group: "rbac.authorization.k8s.io"
    resources: ["roles", "clusterroles", "rolebindings", "clusterrolebindings"]

# Log service account token requests
- level: Request
  resources:
  - group: ""
    resources: ["serviceaccounts/token"]

# =====================================
# SECRET MANAGEMENT AUDIT
# =====================================

# Log all vault-related operations
- level: RequestResponse
  namespaces: ["vault", "spiralogic"]
  resources:
  - group: ""
    resources: ["secrets", "configmaps", "serviceaccounts"]
  resourceNames:
  - "*vault*"
  - "*external-secrets*"

# Log External Secrets Operator activity
- level: Request
  resources:
  - group: "external-secrets.io"
    resources: ["externalsecrets", "secretstores", "clustersecretstores"]

# Log HashiCorp Vault CSI activity
- level: Request
  resources:
  - group: "secrets-store.csi.x-k8s.io"
    resources: ["secretproviderclasses", "secretproviderclasspodstatuses"]

# =====================================
# NETWORK SECURITY AUDIT
# =====================================

# Log network policy changes
- level: RequestResponse
  resources:
  - group: "networking.k8s.io"
    resources: ["networkpolicies"]

# Log ingress and service changes
- level: Request
  resources:
  - group: ""
    resources: ["services"]
  - group: "networking.k8s.io"
    resources: ["ingresses"]
  namespaces: ["spiralogic", "spiralogic-prod", "spiralogic-staging"]

# Log load balancer and external IP changes
- level: RequestResponse
  verbs: ["create", "update", "patch"]
  resources:
  - group: ""
    resources: ["services"]
  namespaces: ["spiralogic", "spiralogic-prod", "spiralogic-staging"]
  omitStages: ["RequestReceived"]

# =====================================
# POLICY ENFORCEMENT AUDIT
# =====================================

# Log OPA Gatekeeper policy violations
- level: RequestResponse
  resources:
  - group: "templates.gatekeeper.sh"
    resources: ["constrainttemplates"]
  - group: "constraints.gatekeeper.sh"
    resources: ["*"]

# Log Pod Security Policy/Standards violations
- level: Request
  resources:
  - group: "policy"
    resources: ["podsecuritypolicies"]
  - group: ""
    resources: ["pods"]
  namespaces: ["spiralogic", "spiralogic-prod", "spiralogic-staging"]

# =====================================
# AUTHENTICATION AND AUTHORIZATION
# =====================================

# Log authentication failures
- level: Request
  users: ["system:anonymous"]
  namespaces: ["spiralogic", "spiralogic-prod", "spiralogic-staging"]

# Log impersonation attempts
- level: Request
  verb: "impersonate"
  resources:
  - group: ""
    resources: ["users", "groups", "serviceaccounts"]

# Log webhook configuration changes
- level: RequestResponse
  resources:
  - group: "admissionregistration.k8s.io"
    resources: ["validatingadmissionwebhooks", "mutatingadmissionwebhooks"]

# =====================================
# STORAGE AND DATA AUDIT
# =====================================

# Log persistent volume operations
- level: Request
  resources:
  - group: ""
    resources: ["persistentvolumes", "persistentvolumeclaims"]
  namespaces: ["spiralogic", "spiralogic-prod", "spiralogic-staging"]

# Log storage class changes (encryption settings)
- level: RequestResponse
  resources:
  - group: "storage.k8s.io"
    resources: ["storageclasses"]

# Log volume snapshot operations (backup/restore)
- level: Request
  resources:
  - group: "snapshot.storage.k8s.io"
    resources: ["volumesnapshots", "volumesnapshotcontents", "volumesnapshotclasses"]

# =====================================
# MONITORING AND OBSERVABILITY
# =====================================

# Log monitoring configuration changes
- level: Request
  namespaces: ["monitoring", "prometheus", "grafana"]
  resources:
  - group: ""
    resources: ["configmaps", "secrets", "services"]
  - group: "monitoring.coreos.com"
    resources: ["servicemonitors", "prometheusrules", "alertmanagers"]

# Log security scanning results access
- level: Request
  resources:
  - group: ""
    resources: ["configmaps"]
  resourceNames:
  - "*security-scan*"
  - "*vulnerability*"
  - "*compliance*"

# =====================================
# WORKLOAD SECURITY AUDIT
# =====================================

# Log container image pull events
- level: Request
  verbs: ["create", "update"]
  resources:
  - group: ""
    resources: ["pods"]
  namespaces: ["spiralogic", "spiralogic-prod", "spiralogic-staging"]

# Log deployment and statefulset changes
- level: Request
  verbs: ["create", "update", "patch", "delete"]
  resources:
  - group: "apps"
    resources: ["deployments", "statefulsets", "daemonsets"]
  namespaces: ["spiralogic", "spiralogic-prod", "spiralogic-staging"]

# Log job and cronjob execution (security scans, backups)
- level: Request
  resources:
  - group: "batch"
    resources: ["jobs", "cronjobs"]
  namespaces: ["spiralogic", "spiralogic-prod", "spiralogic-staging"]

# =====================================
# ELEMENTAL AGENT SPECIFIC AUDIT
# =====================================

# Log elemental agent configuration changes
- level: RequestResponse
  resources:
  - group: ""
    resources: ["configmaps", "secrets"]
  resourceNames:
  - "*fire-agent*"
  - "*water-agent*"
  - "*earth-agent*"
  - "*air-agent*"
  - "*aether-agent*"
  namespaces: ["spiralogic", "spiralogic-prod", "spiralogic-staging"]

# Log gRPC service changes
- level: Request
  resources:
  - group: ""
    resources: ["services"]
  resourceNames:
  - "*grpc*"
  - "*agent*"
  namespaces: ["spiralogic", "spiralogic-prod", "spiralogic-staging"]

# =====================================
# COMPLIANCE AND REGULATORY
# =====================================

# Log all operations affecting PII/sensitive data
- level: RequestResponse
  resources:
  - group: ""
    resources: ["secrets", "configmaps"]
  resourceNames:
  - "*pii*"
  - "*personal*"
  - "*biometric*"
  - "*profile*"
  - "*user-data*"
  omitStages: ["RequestReceived"]

# Log data retention policy changes
- level: RequestResponse
  resources:
  - group: ""
    resources: ["configmaps"]
  resourceNames:
  - "*retention*"
  - "*lifecycle*"
  - "*purge*"

# Log backup and disaster recovery operations
- level: Request
  resources:
  - group: ""
    resources: ["persistentvolumeclaims", "pods"]
  resourceNames:
  - "*backup*"
  - "*restore*"
  - "*disaster*"

# =====================================
# INCIDENT RESPONSE AUDIT
# =====================================

# Log emergency access operations
- level: RequestResponse
  users:
  - "emergency@spiralogic.network"
  - "incident-response@spiralogic.network"
  omitStages: ["RequestReceived"]

# Log quarantine and isolation operations
- level: RequestResponse
  resources:
  - group: ""
    resources: ["pods", "services", "networkpolicies"]
  resourceNames:
  - "*quarantine*"
  - "*isolate*"
  - "*emergency*"

# =====================================
# BLOCKCHAIN AND DECENTRALIZATION
# =====================================

# Log SNET and Akash configuration changes
- level: Request
  resources:
  - group: ""
    resources: ["secrets", "configmaps"]
  resourceNames:
  - "*snet*"
  - "*akash*"
  - "*ipfs*"
  - "*blockchain*"

# =====================================
# EXCLUSIONS AND OPTIMIZATIONS
# =====================================

# Don't log routine health checks
- level: None
  users: ["system:serviceaccount:kube-system:generic-garbage-collector"]
  verbs: ["get"]
  resources:
  - group: ""
    resources: ["pods"]

# Don't log system controller operations
- level: None
  users:
  - "system:kube-controller-manager"
  - "system:kube-scheduler"
  - "system:serviceaccount:kube-system:endpoint-controller"

# Don't log routine monitoring scrapes
- level: None
  verbs: ["get"]
  resources:
  - group: ""
    resources: ["pods", "nodes"]
  users:
  - "system:serviceaccount:monitoring:prometheus"

# Don't log kubelet operations
- level: None
  users: ["kubelet"]
  verbs: ["get", "list", "watch"]
  resources:
  - group: ""
    resources: ["nodes", "nodes/status"]

# =====================================
# DEFAULT CATCH-ALL RULES
# =====================================

# Log all other operations in spiralogic namespaces at Metadata level
- level: Metadata
  namespaces: ["spiralogic", "spiralogic-prod", "spiralogic-staging", "vault", "external-secrets-system"]
  omitStages: ["RequestReceived"]

# Log cluster-level security operations
- level: Metadata
  resources:
  - group: "rbac.authorization.k8s.io"
  - group: "certificates.k8s.io"
  - group: "policy"
  - group: "networking.k8s.io"
  - group: "admissionregistration.k8s.io"

# Minimal logging for everything else
- level: None